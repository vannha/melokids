// Generates classes to assign animations
@mixin animation-classes($animation-name) {

  $directions-list: (in,out);
  $positions-list:  (top, bottom, left, right);

  $directions-opposite-list: (out, in);
  $positions-opposite-list:  (bottom, top, right, left);

  @each $direction in $directions-list {
    @each $position in $positions-list {

      //$class-name: #{$animation-name}--#{$direction}-#{$position};
      $hover-animation-name: #{$animation-name}-#{$direction}-#{$position};

      .hoverdir-#{$animation-name} {
        &.#{$direction}-#{$position}{
          .overlay,
          .overlay-in {
            animation-name: #{$hover-animation-name};
          }
        }
      }

      $direction-opposite: nth($directions-opposite-list, index($directions-list, $direction));
      $position-opposite: nth($positions-opposite-list, index($positions-list, $position));
      $class-name-opposite: #{$animation-name}--#{$direction-opposite}-#{$position-opposite};
      $animation-name-opposite: #{$animation-name}-#{$direction-opposite}-#{$position-opposite};

      .hoverdir-#{$animation-name} {
        &.#{$direction}-#{$position}{
          .overlay-out {
            animation-name: #{$animation-name-opposite};
          }
        }
      }
    }
  }
}

// Swing animation

@include animation-classes('swing');

// Default visible state after animation - used as start or end points for the keyframe animations
.hoverdir-swing[class*="in-"],
.hoverdir-swing[class*="out-"] {
  perspective: 400px;

  .overlay, .overlay-in, .overlay-out {
    transform: rotate3d(0, 0, 0, 0);
    animation-timing-function: $anim-easing-easeOutCubic;
  }
}

.hoverdir-swing.in-top, .hoverdir-swing.out-top {
  perspective-origin: center top;

  .overlay, .overlay-in, .overlay-out {
    transform-origin: center top;
  }
}

.hoverdir-swing.in-bottom, .hoverdir-swing.out-bottom {
  perspective-origin: center bottom;

  .overlay, .overlay-in, .overlay-out {
    transform-origin: center bottom;
  }
}

.hoverdir-swing.in-left, .hoverdir-swing.out-left {
  perspective-origin: left center;

  .overlay,  .overlay-in, .overlay-out {
    transform-origin: left center;
  }
}

.hoverdir-swing.in-right, .hoverdir-swing.out-right {
  perspective-origin: right center;

  .overlay, .overlay-in, .overlay-out {
    transform-origin: right center;
  }
}


@keyframes swing-in-top {
  0% {
    transform: rotate3d(-1, 0, 0, 90deg);
  }
}

@keyframes swing-out-top {
  100% {
    transform: rotate3d(-1, 0, 0, 90deg);
  }
}

@keyframes swing-in-bottom {
  0% {
    transform: rotate3d(1, 0, 0, 90deg);
  }
}

@keyframes swing-out-bottom {
  100% {
    transform: rotate3d(1, 0, 0, 90deg);
  }
}

@keyframes swing-in-left {
  0% {
    transform: rotate3d(0, 1, 0, 90deg);
  }
}

@keyframes swing-out-left {
  100% {
    transform: rotate3d(0, 1, 0, 90deg);
  }
}

@keyframes swing-in-right {
  0% {
    transform: rotate3d(0, -1, 0, 90deg);
  }
}

@keyframes swing-out-right {
  100% {
    transform: rotate3d(0, -1, 0, 90deg);
  }
}



// Slide animation

@include animation-classes('slide');

.hoverdir-slide[class*="in-"],
.hoverdir-slide[class*="out-"] {
  .overlay, .overlay-in, .overlay-out {
    transform: translate3d(0, 0, 0);
    animation-timing-function: $anim-easing-easeOutQuad;
  }
}

@keyframes slide-in-top {
  0% {
    transform: translate3d(0, -100%, 0);
  }
}

@keyframes slide-out-top {
  100% {
    transform: translate3d(0, -100%, 0);
  }
}

@keyframes slide-in-bottom {
  0% {
    transform: translate3d(0, 100%, 0);
  }
}

@keyframes slide-out-bottom {
  100% {
    transform: translate3d(0, 100%, 0);
  }
}

@keyframes slide-in-left {
  0% {
    transform: translate3d(-100%, 0, 0);
  }
}

@keyframes slide-out-left {
  100% {
    transform: translate3d(-100%, 0, 0);
  }
}


@keyframes slide-in-right {
  0% {
    transform: translate3d(100%, 0, 0);
  }
}

@keyframes slide-out-right {
  100% {
    transform: translate3d(100%, 0, 0);
  }
}

// Slide & Push 

@include animation-classes('slide-push');

.hoverdir-slide-push[class*="in-"],
.hoverdir-slide-push[class*="out-"] {
  .overlay, .overlay-in, .overlay-out {
    transform: translate3d(0, 0, 0);
    animation-timing-function: $anim-easing-easeOutQuad;
  }
}

@keyframes slide-push-in-top {
  0% {
    transform: translate3d(0, -100%, 0);
  }
}

@keyframes slide-push-out-top {
  100% {
    transform: translate3d(0, -100%, 0);
  }
}

@keyframes slide-push-in-bottom {
  0% {
    transform: translate3d(0, 100%, 0);
  }
}

@keyframes slide-push-out-bottom {
  100% {
    transform: translate3d(0, 100%, 0);
  }
}

@keyframes slide-push-in-left {
  0% {
    transform: translate3d(-100%, 0, 0);
  }
}

@keyframes slide-push-out-left {
  100% {
    transform: translate3d(-100%, 0, 0);
  }
}


@keyframes slide-push-in-right {
  0% {
    transform: translate3d(100%, 0, 0);
  }
}

@keyframes slide-push-out-right {
  100% {
    transform: translate3d(100%, 0, 0);
  }
}



// Rotate animation

@include animation-classes('rotate');

.hoverdir-rotate[class*="in-"],
.hoverdir-rotate[class*="out-"] {
  .overlay, .overlay-in, .overlay-out {
    transform: rotate(0);
    animation-timing-function: $anim-easing-easeOutQuad;
  }
}

.hoverdir-rotate.in-top, .hoverdir-rotate.out-top {
  .overlay, .overlay-in, .overlay-out {
    transform-origin: left top;
  }
}

.hoverdir-rotate.in-bottom, .hoverdir-rotate.out-bottom {
  .overlay, .overlay-in, .overlay-out {
    transform-origin: left bottom;
  }
}

.hoverdir-rotate.in-left, .hoverdir-rotate.out-left {
  .overlay, .overlay-in, .overlay-out {
    transform-origin: left top;
  }
}

.hoverdir-rotate.in-right, .hoverdir-rotate.out-right {
  .overlay, .overlay-in, .overlay-out {
    transform-origin: right top;
  }
}

@keyframes rotate-in-top {
  0% {
    transform: rotate(-90deg);
  }
}

@keyframes rotate-out-top {
  100% {
    transform: rotate(-90deg);
  }
}

@keyframes rotate-in-bottom {
  0% {
    transform: rotate(90deg);
  }
}

@keyframes rotate-out-bottom {
  100% {
    transform: rotate(90deg);
  }
}

@keyframes rotate-in-left {
  0% {
    transform: rotate(90deg);
  }
}

@keyframes rotate-out-left {
  100% {
    transform: rotate(90deg);
  }
}

@keyframes rotate-in-right {
  0% {
    transform: rotate(-90deg);
  }
}

@keyframes rotate-out-right {
  100% {
    transform: rotate(-90deg);
  }
}



// Flip animation

@include animation-classes('flip');

.hoverdir-flip[class*="in-"],
.hoverdir-flip[class*="out-"] {
  perspective: 800px;
  overflow: visible;

  .overlay, .overlay-in, .overlay-out {
    transform: rotateX(0) rotateY(0); // Order must be the same as the animations
    animation-timing-function: $anim-easing-easeInOutQuad;
    animation-duration: $anim-duration*2;
    backface-visibility: hidden;
    z-index: 1;
  }
}

@keyframes flip-in-top {
  0% {
    transform: rotateX(180deg) rotateY(0);
  }
}

@keyframes flip-out-top {
  100% {
    transform: rotateX(180deg) rotateY(0);
  }
}

@keyframes flip-in-bottom {
  0% {
    transform: rotateX(-180deg) rotateY(0);
  }
}

@keyframes flip-out-bottom {
  100% {
    transform: rotateX(-180deg) rotateY(0);
  }
}

@keyframes flip-in-left {
  0% {
    transform: rotateX(0) rotateY(-180deg);
  }
}

@keyframes flip-out-left {
  100% {
    transform: rotateX(0) rotateY(-180deg);
  }
}

@keyframes flip-in-right {
  0% {
    transform: rotateX(0) rotateY(180deg);
  }
}

@keyframes flip-out-right {
  100% {
    transform: rotateX(0) rotateY(180deg);
  }
}
