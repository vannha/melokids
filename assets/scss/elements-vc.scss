/**
 * Column Gap 
 * if use option GAP in VC Row / Row Inner
*/
$columns-gap: (
  0: 0px,
  1: 1px,
  2: 2px,
  3: 3px,
  4: 4px,
  5: 5px,
  10: 10px,
  15: 15px,
  20: 20px,
  25: 25px,
  30: 30px,
  35: 35px,
  40: 40px,
  50: 50px,
  60: 60px,
  70: 70px,
  80: 80px,
  90: 90px,
  100: 100px
);
/**
 * Column Space 
 * if use option Space in Column option
*/
$columns-space: (
  0: 0px,
  10: 10px,
  20: 20px,
  30: 30px,
  40: 40px,
  50: 50px,
  60: 60px,
  70: 70px,
  80: 80px,
  90: 90px,
  100: 100px,
);
/* Horizontal space */
$hspaces: (
	0 : 0px,
	10 : 10px,
	20 : 20px,
	30 : 30px,
	40 : 40px,
	50 : 50px,
	100 : 100px,
	120 : 120px,
	150 : 150px,
	260 : 260px,
);
/* Vertical Space */
$vspaces: (
	default : 20px,
	0  : 0,
	10 : 10px,
	20 : 20px,
	30 : 30px,
	35 : 35px,
	40 : 40px,
	50 : 50px,
	100 : 100px,
	120 : 120px,
	150 : 150px,
);
/* Full width horizontal space*/
$fhspaces:(
	100: 100px,
	120: 120px,
	140: 140px,
	160: 160px,
	180: 180px,
	200: 200px,
	220: 220px,
	240: 240px,
	260: 260px
);
.vc-full-height,
.vc_row-o-full-height{
	min-height: 100vh !important;
}
.vc_section{
	padding: 0;
	margin: 0;
	overflow: hidden;
	/* padding-left: $grid-gutter-width / 2 ;
	padding-right: $grid-gutter-width / 2;
	margin-left: $grid-gutter-width / -2;
	margin-right: $grid-gutter-width / -2; */
}
.vc_section,
.vc_row,
.vc_row_inner,
.vc_column,
.vc_column_inner{
	position: relative;
	overflow: hidden;
	/* Content element */
	.wpb_content_element{
		margin-bottom: 0;
	}
}
.vc-content-top {
    -webkit-box-pack: start;
    -ms-flex-pack: start;
    justify-content: flex-start;
}
.vc-content-middle {
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    justify-content: center;
}
.vc-content-bottom {
    -webkit-box-pack: end;
    -ms-flex-pack: end;
    justify-content: flex-end;
}

.vc-flex {
    box-sizing: border-box;
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -ms-flex-flow: column nowrap;
    flex-flow: column nowrap;
}

.parallax_overlay{
	@include overlay();
}
.close-row{
	position: absolute;
	top: 20px;
	width: 22px;
	height: 22px;
	font-size: 22px;
	cursor: pointer;
	z-index: 1;
	
	&.left{
		left: 20px;
	}
	&.right{
		right: 20px;
	}
	&:hover{
		color: $red;
	}
}
/* Remove */
.removed-row {
    -webkit-animation: removed-item-animation .6s cubic-bezier(.55,-0.04,.91,.94) forwards;
    -o-animation: removed-item-animation .6s cubic-bezier(.55,-0.04,.91,.94) forwards;
    animation: removed-item-animation .6s cubic-bezier(.55,-0.04,.91,.94) forwards
}

.vc_parallax{
	&.vc_parallax-fixed .vc_parallax-inner{
		height: 100% !important;
		top: 0 !important;
		background-attachment: fixed !important;
	}
	&.parallax-center .vc_parallax-inner{
		background-position: center center;
	}
	&.vc_parallax-scroll-left .vc_parallax-inner{
		background-size: inherit;
		background-repeat: no-repeat;
	    background-position: left center;
	    height: 100% !important;
	    top: 0 !important;
	}
}

/* VC Column */
.vc-column-container{
	overflow: hidden;
}
.vc-col-has-fill{
	.vc_column-inner{
		//height: 100%;
	}
}
.vc_row{
	@include make-row();
	.vc_column_container{
		padding-left: 0;
		padding-right: 0;
	}
	&.vc_row-no-padding{
		> .vc_column_container > .vc_column-inner{
			padding-left: 0;
			padding-right: 0;
		}
	}
}
.vc_column_container > .vc_column-inner{
	padding-left: $grid-gutter-width / 2 ;
	padding-right: $grid-gutter-width / 2;
}

/**
 * Vertical Space 
 * Default section / row / row inner vertical space
 *
*/
@each $space, $space-value in $vspaces {
    .vs-#{$space}{
    	padding-top: $space-value / 2;
    	padding-bottom: $space-value / 2;
    	> .vc_column_container {
			margin-top: $space-value / 2;
			margin-bottom: $space-value / 2;
		}
    }
}
/**
 * Horizontal Space 
 * Default section / row / row inner horizontal space
 *
*/
@each $space, $space-value in $hspaces {
    .hs-#{$space}{
    	margin-left: ($space-value / -2);
    	margin-right: ($space-value / -2);
    	> .vc_column_container > .vc_column-inner{ 
	    	padding-left: ($space-value / 2);
	    	padding-right: ($space-value / 2);
	    }
    }
}

/* Row Full Width Stretch Content */
.vc_row[data-vc-full-width="true"]{
	@media (min-width: $screen-xl-min){
		@each $fhs, $fhs-value in $fhspaces{
			&.fhs-#{$fhs}{
				padding-left: $fhs-value - ($grid-gutter-width / 2);
				padding-right: $fhs-value - ($grid-gutter-width / 2);
				@each $gap, $gap-value in $columns-gap {
				    &.vc-column-gap-#{$gap}{
				    	padding-left: $fhs-value - ($gap-value / 2);
				    	padding-right: $fhs-value - ($gap-value / 2);
				    }
				}
			}
		}
	}
}
/**
 * Column Space
 * For each space value, define the inner space for row and column in a media query
*/
@each $breakpoint in map-keys($grid-breakpoints) {
	$infix: breakpoint-infix($breakpoint, $grid-breakpoints);
	@include media-breakpoint-up($breakpoint, $grid-breakpoints) {
		@each $space, $space-value in $columns-space{
			.pad#{$infix}-#{$space} > .vc_column-inner{
				padding-left: $space-value !important;
				padding-right: $space-value !important;
			}
		}
	}
}
/**
 * Column GAP
 * For each gap value, define the outer space for row and column in a media query
*/
@each $gap, $gap-value in $columns-gap {
    .vc-column-gap-#{$gap}{
    	margin-left: ($grid-gutter-width + $gap-value) / -2 ;
    	margin-right: ($grid-gutter-width + $gap-value) / -2;
    	> .vc_column_container {
			padding-left: ($gap-value / 2);
			padding-right: ($gap-value / 2);
		}
		/* Row inner */
		/* .vc_inner{
			margin-left: ($gap-value) / -2;
    		margin-right: ($gap-value) / -2;
    		> .vc-column-container {
				margin-left: ($gap-value / 2);
				margin-right: ($gap-value / 2);
			}
		} */
		/* fix column width when use GAP */
		/* @each $breakpoint in map-keys($grid-breakpoints) {
			$infix: breakpoint-infix($breakpoint, $grid-breakpoints);
			@include media-breakpoint-up($breakpoint, $grid-breakpoints) {
				@for $i from 1 through $grid-columns {
					$w : percentage($i / $grid-columns);
					$space: #{$gap-value};
					$x: $w - $space;
			        .col#{$infix}-#{$i} {
			        	flex: 0 0 calc(#{$x});
			          	max-width: calc(#{$x});
			        }
			    }
			}
		} */
    }
}
/* VC Custom WordPress Menu */
.vc_wp_custommenu{
	&.hori{
		border-bottom: 1px solid #E4E4E4;
		margin-bottom: 40px !important;
		padding-bottom: 20px;
		.menu{
			margin-left: -20px;
			margin-right: -20px;
			@include d-flex();
			li{
				padding: 0 20px;
				position: relative;
				text-transform: uppercase;
				font-family: $EdmonsB;
				font-size: 15px;
				letter-spacing: 1.88px;
				&:after{
					content: '';
					display: block;
					position: absolute;
					top: 4px;
					bottom: 4px;
					right: 0;
					width: 1px;
					background: rgba($body_font_color, 0.36);
				}
				&:last-child:after{
					display: none;
				}
				a{
					color: $body_font_color;
				}
				&:hover, 
				&.current-menu-item{
					a{
						color: $primary_color;
					}
				}
			}
		}
		&.small{
			margin-bottom: 50px !important;
			padding-bottom: 10px;
		}
	}
}
.rtl .vc_wp_custommenu.hori .menu li:after{
	right: auto;
	left: 0;
}

